manifest {
    author = 'Nicolas Chiaruttini'
    description = 'Pipeline for CZI processing with BigStitcher and BrainReg'
    version = '0.1.0-SNAPSHOT'
}

params {
    // Default for local development
    fiji_cache_dir = "${projectDir}/work/fiji_mouse_czi_processing"
    env_cache_dir = "${projectDir}/work/envs"
    atlas_cache_dir = "${projectDir}/work/atlas"

    input = null  // Will be overridden by command line
    outdir = null  // Output directory - required parameter

    bigstitcher {
        
        channel_alignment {
            pairwise_shifts_downsamples {
                x = 4
                y = 4
                z = 2
            }
            filter_min_r = 0.7
        }
        
        tile_alignment {
            use_channel = 0
            pairwise_shifts_downsamples {
                x = 4
                y = 4
                z = 2
            }
            filter_min_r = 0.7
        }
        
        icp_refinement {
            icp_refinement_type = "Simple (all together)"
            downsampling = "Downsampling 8/8/4"
            interest = "Average Threshold"
            icp_max_error = "Normal Adjustment (<5px)"
        }
        
        reorientation {
            raw_orientation = "IAL"
            reorient_to_asr = true
        }
        
        fusion_config {
            downsample=10
            fusion_method = "SMOOTH AVERAGE"
        }
    }

    brainreg {
        // Single valued parameters
        atlas = "allen_mouse_25um"
        backend = "niftyreg"
        channel_used_for_registration = 0
        affine_n_steps = 6
        affine_use_n_steps = 5
        freeform_n_steps = 6
        freeform_use_n_steps = 4
        smoothing_sigma_reference = -1.0
        histogram_n_bins_floating = 128
        histogram_n_bins_reference = 128
        n_free_cpus = 2
        debug = true
        save_original_orientation = true
        brain_geometry = "full"
        sort_input_file = true
        pre_processing = "default"

        // Sweepable parameters. Use one value and keep brackets if you don't want to sweep
        // It's possible to transfer other parameters to sweepable ones but this requires changes in the code
        bending_energy_weight = [0.3, 0.8] // Sweepable
        grid_spacing = [4] // Sweepable  
        smoothing_sigma_floating = ['-1'] //Sweepable
    }

}

profiles {
    local {
        params {
            fiji_cache_dir = "${projectDir}/work/fiji_mouse_czi_processing"
        }
        apptainer.enabled = true
        apptainer.autoMounts = true
        process.executor = 'local'
        
        // Set cache directory to avoid the warning
        apptainer.cacheDir = "$HOME/.apptainer/cache"
    }
    
    slurm {
        process {
            executor = 'slurm'
            queue = 'standard'
            memory = '64 GB'
            cpus = 16
            time = '4h'
            
            withName: 'stageFilesRSync|publishInitialXmlToSource|publishStitchedXmlToSource|copyResultsToImageFolder' {
                executor = 'local'  // Explicit override
                memory = '2 GB'
                cpus = 1
            }
           
            withName: 'alignChannelsWithBigstitcher|alignTilesWithBigstitcher|fuseBigStitcherDataset' {
                executor = 'slurm'  // Explicitly set executor
                queue = 'bigmem'
                memory = '128 GB'
                cpus = 32
                time = '8h'
            }
        }
       
        workDir = "/scratch/${System.getProperty('user.name')}/nf"
        apptainer.enabled = true
        apptainer.autoMounts = true
        apptainer.cacheDir = "/work/${['id', '-gn'].execute().text.trim().replaceAll('-unit$', '')}/apptainer_cache" // you can replace ${['id', '-gn'].execute().text.trim().replaceAll('-unit$', '')} with the name of your group if this does not work (for instance ptbiop afaiac)
       
        params {
            fiji_cache_dir = "/work/${['id', '-gn'].execute().text.trim().replaceAll('-unit$', '')}/fiji_mouse_czi_processing"
            env_cache_dir = "/work/${['id', '-gn'].execute().text.trim().replaceAll('-unit$', '')}/envs"
            atlas_cache_dir = "/work/${['id', '-gn'].execute().text.trim().replaceAll('-unit$', '')}/atlas"
        }
    }

    test {
        params.input = "${projectDir}/test_data/Small.czi" // This file is located here and has been renamed: https://zenodo.org/records/8305531/files/Demo%20LISH%204x8%2015pct%20647.czi
        params.bigstitcher.channel_alignment.filter_min_r = 0.5
    }
}

env {
  FIJI_PATH = '/path/to/your/Fiji.app'
}
